{"name":"Hostsblock","tagline":"an ad- and malware-blocking cronscript for Linux","body":"#News\r\nTo participate in the ongoing discussion on `hostsblock`, check out its [Arch Linux forum](https://bbs.archlinux.org/viewtopic.php?id=139784) or its [Arch User Repository page](https://aur.archlinux.org/packages.php?ID=58976).\r\n\r\n#####Version 0.12.3 (03.06.2013)\r\n* hostblock-urlcheck: issue with colored prompt on white-backgrounded terminals fixed\r\n\r\n#####Version 0.12.2 (02.06.2013)\r\n* whitelist, blacklist not applying fixed\r\n\r\n#####Version 0.12.1 (31.05.2013)\r\n* quick fix of previous change.\r\n\r\n#####Version 0.12 (31.05.2013)\r\n* changed order of processing of black and while lists.\r\n\r\n#####Version 0.11.3 (31.05.2013)\r\n* changed installation path according to new Arch Linux practices.\r\n\r\n#####Debian Package Now Available! (19.02.2013)\r\nSadi Yumu≈üak has been so kind as to create a debian package of this util, available in one of the downloads above (zip or tar).\r\n\r\n#####Version 0.11.2 (09.12.2012)\r\n* swapped out use of md5sums for ls mod times to improve performance\r\n\r\n#####Version 0.11.1 (13.09.2012)\r\n* accumulated fixes with feedback (thanks tlvince)\r\n* fixed hostsblock-urlcheck's misidentification of colons in urls\r\n\r\n#####New Webpage (30.08.2012)\r\nIn order to centralize resources, I'm migrating all of `hostsblock`'s web presence to github.com.\r\n\r\n#Description\r\n__`Hostsblock`__ is a bash script for Linux designed to take advantage of the [HOSTS file](https://en.wikipedia.org/wiki/Hosts_file) available in all operating systems to provide [system-wide blocking](http://winhelp2002.mvps.org/hosts.htm) of internet advertisements, malicious domains, trackers, and other undesirable content. To do so, it downloads a configurable set of blocklists and processes and their entries into a singular HOSTS file.\r\n\r\n`Hostsblock` also includes `hostsblock-urlcheck`, a command-line utility that allows you to block and unblock certain websites and any other domains contained in that website, in the event that the included blocklists don't block enough or block too little on a specific site.\r\n\r\n#Features\r\n* __System-wide blocking__ (all non-proxied connections use the HOSTS file)\r\n* __Zip- and 7zip-capable__ (can download and process zip- and 7zip-compressed files)\r\n* __Non-interactive__ (can be run as a periodic cronjob without needing user interaction)\r\n* __Extensive configurability__ (allows for custom black and white listing, redirection, post-processing scripting, target HOSTS file, etc.)\r\n* __Bandwith-efficient__ (only downloads blocklists that have been changed, uses compression when available)\r\n* __Resource-efficient__ (only processes blocklists when changes are registered, uses minimal pipes)\r\n* __High performance blocking__ (when using dns caching and pseudo-server daemons)\r\n* __Extensive choice of blocklists included__ (allows user to customize how much or how little is blocked)\r\n* __Redirection capability__ (combats [DNS cache poisoning](https://en.wikipedia.org/wiki/DNS_cache_poisoning))\r\n\r\n#Screenshots\r\n[![Beginning output of hostsblock. Click to enlarge.](http://www.personal.psu.edu/jav209/thumb-hostsblock-start.png)](http://www.personal.psu.edu/jav209/hostsblock-start.png)\r\n[![End output of hostsblock. Click to enlarge.](http://www.personal.psu.edu/jav209/thumb-hostsblock-end.png)](http://www.personal.psu.edu/jav209/hostsblock-end.png)\r\n[![Output of hostsblock-urlcheck. Click to enlarge.](http://www.personal.psu.edu/jav209/thumb-hostsblock-urlcheck.png)](http://www.personal.psu.edu/jav209/hostsblock-urlcheck.png)\r\n\r\n#Dependencies\r\n`Hostsblock` only requires a few utilities that are standard on most Linux distros, including [GNU `bash`](https://www.gnu.org/software/bash/), [`curl`](http://curl.haxx.se/), [GNU `grep`](https://www.gnu.org/software/grep/grep.html), [GNU `sed`](https://www.gnu.org/software/sed/), and [GNU `coreutils`](https://www.gnu.org/software/coreutils/).\r\n\r\n####Optional dependencies\r\n`Hostsblock` allows for additional features if the following utilities are installed and in the path:\r\n\r\nUnarchivers, so that archive blocklists can be used instead of just plaintext, e.g.:\r\n* [`unzip`](http://www.info-zip.org/) for zip archives, AND\r\n* [`p7zip`](http://p7zip.sourceforge.net/) for 7z archives\r\n\r\nA DNS caching daemon to help speed up DNS resolutions, such as:\r\n* [`dnsmasq`](http://www.thekelleys.org.uk/dnsmasq/doc.html) (recommended), OR\r\n* [`pdnsd`](http://members.home.nl/p.a.rombouts/pdnsd/index.html) (untested)\r\n\r\nA pseudo-server that serves blank pages in order to remove the boilerplate page and speed up page resolution on blocked domains. Examples include:\r\n* [`kwakd`](https://code.google.com/p/kwakd/) (recommended), OR\r\n* [`pixelserv`](http://proxytunnel.sourceforge.net/pixelserv.php)\r\n\r\n#Installation\r\nOn an Arch Linux system, you can install hostsblock through AUR utilities such as [`yaourt`](https://aur.archlinux.org/packages.php?ID=5863). If you are not running an Arch Linux system (which you should), follow these steps:\r\n\r\n1. Make sure you have all of the _required dependencies_ above, and that they are in your path.\r\n\r\n2. Download the latest stable source file from the [AUR](https://aur.archlinux.org/packages/ho/hostsblock/hostsblock.tar.gz) or get the [unstable version](https://github.com/gaenserich/hostsblock/tarball/master)\r\n\r\n3. Extract the source files from the archive, and then enter the extracted hostsblock directory in a terminal.\r\n\r\n4. Execute the following __as root__ or with `sudo`:\r\n```\r\ninstall -Dm755 hostsblock.sh /usr/sbin/hostsblock\r\ninstall -Dm755 hostsblock-urlcheck.sh /usr/sbin/hostsblock-urlcheck\r\ninstall -Dm644 rc.conf /etc/hostsblock/rc.conf\r\ninstall -Dm644 black.list /etc/hostsblock/black.list\r\ninstall -Dm644 white.list /etc/hostsblock/white.list\r\ninstall -Dm644 hosts.head /etc/hostsblock/hosts.head\r\n```\r\n\r\n5. If you will be using `hostsblock` without a dns caching daemon, make sure to copy your existing `/etc/hosts` file to `/etc/hostsblock/hosts.head` and enable this destination file in `rc.conf`.\r\n\r\n6. If you want to use `hostsblock-urlcheck` as a regular user (without having to change to root each time you use it), enter the following via `visudo` __as root__:\r\n```\r\n[yourusername] ALL=NOPASSWD: /usr/sbin/hostsblock-urlcheck\r\n```\r\nWhere `[yourusername]` is the regular user you allow to use `hostsblock-urlcheck`.\r\n\r\n7. Once enabled, you can use this utility by entering:\r\n```\r\n$ sudo hostsblock-urlcheck \"http://www.example.org\"\r\n```\r\nto check if \"http://www.example.org\" and any domains present on this page are blocked or unblocked and to change them accordingly.\r\n\r\n#Configuration\r\nExtensive documentation is found in the `rc.conf` file (installed by default under `/etc/hostsblock/rc.conf`). Follow the directions therein before running `hostsblock`. For more details on specific configurations, follow these instructions:\r\n\r\n####If you want to run `hostsblock` with a dns caching server, e.g. dnsmasq:\r\n\r\n1. Install `dnsmasq` (e.g. via `pacman -S dnsmasq`).\r\n\r\n2. [Configure dnsmasq as a local caching server.](https://wiki.archlinux.org/index.php/Dnsmasq#DNS_Cache_Setup)\r\n\r\n3. Add the following to `/etc/dnsmasq.conf`:\r\n```\r\naddn-hosts=/etc/hosts.block\r\n```\r\n```\r\npostprocess(){ \r\nsystemctl restart dnsmasq.service \r\n}\r\n```\r\nWhere \"systemctl restart dnsmasq.service\" is your system's command to restart `dnsmasq`.\r\n\r\nFrom now on, whenever `hostsblock` runs, or if `hostsblock-urlcheck` makes changes, `dnsmasq` will automatically be restarted.\r\n\r\n####If you want to run `hostsblock` without a dns caching server:\r\n\r\n1. Make sure you back up your existing `/etc/hosts` file to `/etc/hostsblock/hosts.head`:\r\n```\r\n$ cp /etc/hosts /etc/hostsblock/hosts.head\r\n```\r\n\r\n2. In `/etc/hostsblock/rc.conf`, make sure the following variables are entered as shown here:\r\n```\r\nhostsfile=\"/etc/hosts\" \r\n```\r\n```\r\npostprocess(){ \r\n/bin/true \r\n} \r\n```\r\n```\r\nhostshead=\"/etc/hostsblock/hosts.head\"\r\n```\r\n\r\n#Todo\r\nDrop me any suggestions in the [Arch Linux Forum](https://bbs.archlinux.org/viewtopic.php?id=139784) that you might have, or feel free to fork via github. Other ideas:\r\n* Port to Perl or Python to improve string processing performance.\r\n* Integrate with systemd services\r\n* Autodetect archiving utils in order to compress archived hosts file.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}